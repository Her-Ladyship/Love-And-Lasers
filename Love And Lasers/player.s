;
; File generated by cc65 v 2.19 - Git 065b0d7
;
	.fopt		compiler,"cc65 v 2.19 - Git 065b0d7"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_draw_player
	.export		_handle_shmup_input
	.export		_check_player_hit
	.import		_oam_meta_spr
	.import		_i
	.import		_pad1
	.import		_player_invincible
	.import		_player_x
	.import		_player_y
	.import		_player_health
	.import		_player_score
	.import		_enemy_type
	.import		_player_sprite
	.import		_enemy_x
	.import		_enemy_y
	.import		_enemy_active
	.import		_on_player_death

; ---------------------------------------------------------------
; void __near__ draw_player (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_player: near

.segment	"CODE"

;
; const unsigned char* sprite = player_sprite;
;
	lda     #<(_player_sprite)
	ldx     #>(_player_sprite)
	jsr     pushax
;
; for (i = 0; i < 5; ++i) {
;
	lda     #$00
	sta     _i
L000A:	lda     _i
	cmp     #$05
	bcs     L0003
;
; temp_sprite[i] = player_sprite[i];
;
	lda     #<(M0001)
	ldx     #>(M0001)
	clc
	adc     _i
	bcc     L0006
	inx
L0006:	sta     ptr1
	stx     ptr1+1
	ldy     _i
	lda     _player_sprite,y
	ldy     #$00
	sta     (ptr1),y
;
; for (i = 0; i < 5; ++i) {
;
	inc     _i
	jmp     L000A
;
; temp_sprite[3] = player_invincible ? 1 : 0;
;
L0003:	lda     _player_invincible
	beq     L000C
	lda     #$01
L000C:	sta     M0001+3
;
; oam_meta_spr(player_x, player_y, temp_sprite);
;
	jsr     decsp2
	lda     _player_x
	ldy     #$01
	sta     (sp),y
	lda     _player_y
	dey
	sta     (sp),y
	lda     #<(M0001)
	ldx     #>(M0001)
	jsr     _oam_meta_spr
;
; }
;
	jmp     incsp2

.segment	"BSS"

M0001:
	.res	5,$00

.endproc

; ---------------------------------------------------------------
; void __near__ handle_shmup_input (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_handle_shmup_input: near

.segment	"CODE"

;
; if (pad1 & PAD_LEFT && player_x > 8) player_x--;
;
	lda     _pad1
	and     #$02
	beq     L0015
	lda     _player_x
	cmp     #$09
	bcc     L0015
	dec     _player_x
;
; if (pad1 & PAD_RIGHT && player_x < 40) player_x++;
;
L0015:	lda     _pad1
	and     #$01
	beq     L0019
	lda     _player_x
	cmp     #$28
	bcs     L0019
	inc     _player_x
;
; if (pad1 & PAD_UP && player_y > PLAYFIELD_TOP) player_y--;
;
L0019:	lda     _pad1
	and     #$08
	beq     L001D
	lda     _player_y
	cmp     #$31
	bcc     L001D
	dec     _player_y
;
; if (pad1 & PAD_DOWN && player_y < PLAYFIELD_BOTTOM) player_y++;
;
L001D:	lda     _pad1
	and     #$04
	beq     L001F
	lda     _player_y
	cmp     #$C0
	bcc     L0020
L001F:	rts
L0020:	inc     _player_y
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ check_player_hit (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_check_player_hit: near

.segment	"CODE"

;
; for (i = 0; i < MAX_ENEMIES; ++i) {
;
	lda     #$00
	sta     _i
L002B:	lda     _i
	cmp     #$06
	bcc     L003B
;
; }
;
	rts
;
; if (enemy_active[i] && enemy_x[i] < 44) {
;
L003B:	ldy     _i
	lda     _enemy_active,y
	jeq     L0038
	ldy     _i
	lda     _enemy_x,y
	cmp     #$2C
	jcs     L0038
;
; unsigned char hitbox_top = enemy_y[i];
;
	ldy     _i
	lda     _enemy_y,y
	jsr     pusha
;
; unsigned char hitbox_bottom = enemy_y[i] + ((enemy_type[i] == ENEMY_TYPE_TOUGH) ? 24 : 8);
;
	ldy     _i
	lda     _enemy_type,y
	cmp     #$02
	bne     L002F
	lda     #$18
	jmp     L0010
L002F:	lda     #$08
L0010:	clc
	ldy     _i
	adc     _enemy_y,y
	jsr     pusha
;
; if ((player_x > enemy_x[i] ? player_x - enemy_x[i] : enemy_x[i] - player_x) < 6 &&
;
	lda     _player_x
	ldy     _i
	cmp     _enemy_x,y
	bcc     L0013
	beq     L0013
	lda     _player_x
	sec
	ldy     _i
	sbc     _enemy_x,y
	jmp     L003A
L0013:	ldy     _i
	lda     _enemy_x,y
	sec
	sbc     _player_x
L003A:	ldx     #$00
	bcs     L0015
	dex
L0015:	cmp     #$06
	txa
	sbc     #$00
	bvc     L0017
	eor     #$80
L0017:	bpl     L0011
;
; (player_y >= hitbox_top && player_y <= hitbox_bottom)) {
;
	lda     _player_y
	ldy     #$01
	cmp     (sp),y
	bcc     L0011
	lda     _player_y
	dey
	cmp     (sp),y
	bcc     L0035
	bne     L0011
;
; enemy_active[i] = 0;
;
L0035:	ldy     _i
	lda     #$00
	sta     _enemy_active,y
;
; player_score += (enemy_type[i] == ENEMY_TYPE_TOUGH) ? 50 : (enemy_type[i] == ENEMY_TYPE_FAST) ? 20 : 10;
;
	ldy     _i
	lda     _enemy_type,y
	cmp     #$02
	bne     L0020
	lda     #$32
	jmp     L0024
L0020:	ldy     _i
	lda     _enemy_type,y
	cmp     #$01
	bne     L0036
	lda     #$14
	jmp     L0024
L0036:	lda     #$0A
L0024:	clc
	adc     _player_score
	sta     _player_score
	lda     #$00
	adc     _player_score+1
	sta     _player_score+1
;
; if (!player_invincible) {
;
	lda     _player_invincible
	bne     L0037
;
; if (player_health > 0) {
;
	lda     _player_health
	beq     L0037
;
; player_health--;
;
	dec     _player_health
;
; if (player_health == 0) {
;
L0037:	lda     _player_health
	bne     L0027
;
; on_player_death();
;
	jsr     _on_player_death
;
; break;
;
L0027:	jmp     incsp2
;
; }
;
L0011:	jsr     incsp2
;
; for (i = 0; i < MAX_ENEMIES; ++i) {
;
L0038:	inc     _i
	jmp     L002B

.endproc

