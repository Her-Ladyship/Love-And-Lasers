;
; File generated by cc65 v 2.19 - Git 065b0d7
;
	.fopt		compiler,"cc65 v 2.19 - Git 065b0d7"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_init_level
	.export		_update_level_logic
	.export		_on_level_complete
	.export		_on_player_death
	.import		_ppu_off
	.import		_ppu_on_all
	.import		_game_state
	.import		_current_level
	.import		_shmup_screen_drawn
	.import		_shmup_started
	.import		_player_health
	.import		_player_score
	.import		_shmup_timer
	.import		_clear_all_enemies
	.import		_clear_all_bullets
	.import		_clear_screen
	.import		_clear_line
	.import		_reset_companion_ability_state

; ---------------------------------------------------------------
; void __near__ init_level (unsigned char level)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_level: near

.segment	"CODE"

;
; void init_level(unsigned char level) {
;
	jsr     pusha
;
; current_level = level;
;
	ldy     #$00
	lda     (sp),y
	sta     _current_level
;
; clear_all_enemies();
;
	jsr     _clear_all_enemies
;
; clear_all_bullets();
;
	jsr     _clear_all_bullets
;
; clear_screen();
;
	jsr     _clear_screen
;
; shmup_timer = 5400; // 90 seconds (can change per level)
;
	ldx     #$15
	lda     #$18
	sta     _shmup_timer
	stx     _shmup_timer+1
;
; player_health = MAX_HEALTH;
;
	lda     #$03
	sta     _player_health
;
; player_score = 0;
;
	lda     #$00
	sta     _player_score
	sta     _player_score+1
;
; reset_companion_ability_state();
;
	jsr     _reset_companion_ability_state
;
; }
;
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ update_level_logic (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_update_level_logic: near

.segment	"CODE"

;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ on_level_complete (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_on_level_complete: near

.segment	"CODE"

;
; game_state = STATE_DIALOGUE;
;
	lda     #$05
	sta     _game_state
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ on_player_death (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_on_player_death: near

.segment	"CODE"

;
; ppu_off();
;
	jsr     _ppu_off
;
; clear_all_bullets();
;
	jsr     _clear_all_bullets
;
; clear_all_enemies();
;
	jsr     _clear_all_enemies
;
; clear_line(1);  // HUD row (HP, SCORE, SPECIAL)
;
	lda     #$01
	jsr     _clear_line
;
; clear_line(27); // TIMER row at the bottom
;
	lda     #$1B
	jsr     _clear_line
;
; clear_screen();
;
	jsr     _clear_screen
;
; shmup_screen_drawn = 0;
;
	lda     #$00
	sta     _shmup_screen_drawn
;
; shmup_started = 0;
;
	sta     _shmup_started
;
; shmup_timer = 5400;
;
	ldx     #$15
	lda     #$18
	sta     _shmup_timer
	stx     _shmup_timer+1
;
; player_health = MAX_HEALTH;
;
	lda     #$03
	sta     _player_health
;
; player_score = 0;
;
	lda     #$00
	sta     _player_score
	sta     _player_score+1
;
; game_state = STATE_GAME_OVER;
;
	lda     #$07
	sta     _game_state
;
; ppu_on_all();
;
	jmp     _ppu_on_all

.endproc

